{"version":3,"sources":["replacement/7","src/common/parseHex.js","src/renderer/color.js","src/common/global.js","src/common/configuration.js","src/renderer/point.js","src/renderer/transform.js","src/renderer/graphics.js","replacement/1","src/renderer/shapes.js","src/renderer/colorTheme.js","src/renderer/iconGenerator.js","src/common/sha1.js","src/common/hashUtils.js","src/renderer/canvas/canvasRenderer.js","replacement/2","src/apis/drawIcon.js","src/renderer/svg/svgPath.js","replacement/3","src/renderer/svg/svgRenderer.js","replacement/4","src/renderer/svg/constants.js","src/renderer/svg/svgWriter.js","replacement/5","src/apis/toSvg.js","src/common/dom.js","src/renderer/svg/svgElement.js","replacement/6","src/apis/update.js","src/browser-cjs.js","utils.js","index.js","C:/Users/admin/AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["let","const","GLOBAL","MODULE","hue","colorSaturation","grayscaleSaturation","colorLightness","grayscaleLightness","backColor","iconPadding","_x","_y","_size","_rotation","transformIconPoint","_renderer","currentTransform","addPolygon","this","addCircle","addRectangle","addTriangle","addRhombus","setBackground","iconSize","beginShape","endShape","_ctx","dataString","_path","_pathsByColor","_target","appendPath","XMLNS","WIDTH","HEIGHT","_s","HASH","VALUE","_el","makeid","length","text","possible","i","charAt","Math","floor","random","GE","el","document","getElementById","SetSearchParam","param","value","url","URL","window","location","href","query_string","search","search_params","URLSearchParams","old_value","get","set","delete","toString","history","pushState","title","GetSearchParam","cell_colors","cached_levels_data","cached_level_path","innerHTML","levels_data","console","log","template","levels_backet","level_ind","level","svg","encodeURIComponent","localStorage","getItem","scrollTo","level_path","level_name","replace","split","slice","join","fetch","then","response","json","build_level","task","decodeURIComponent","load_level","build_levels","block_data_cache","create_block","params","block_name","block_data","is_clickable","is_dragable","is_big","block_size","action","mz","rid","forEach","element","cid","color_ind","cell_ind","input_name","output_name","input_data","output_data","in_cell_id","in_cell_color","Array","from","classList","filter","cell_class","includes","out_cell_id","out_cell_color","remove","add","color","last_interacted_cell","last_color_index","level_json","train","input","output","test","empty_block","indexOf","observer","IntersectionObserver","entries","isIntersecting","threshold","observe","hover_color_index","start_cell_ind","last_color_index_","main_color","addEventListener","fill_color","initial_cell_color","cell_color","color_index","x","y","flood_fill","style","animation","offsetHeight","check","test_output","res_cell_id","res_cell_color","res_color_ind","ind","setItem","setTimeout","timeout","ms","Promise","resolve","start_color","cell_id","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","body","appendChild","createElement","stackTrace","innerText","getParents","modules","parents","k","d","dep","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"source.e31bb0bc.js","sourceRoot":"source","sourcesContent":["/**\r\n * Jdenticon 3.1.0\r\n * http://jdenticon.com\r\n *\r\n * Built: 2020-12-12T13:51:48.709Z\r\n * \r\n * MIT License\r\n * \r\n * Copyright (c) 2014-2020 Daniel Mester Pirttijärvi\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n * \r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n * \r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n","﻿/**\r\n * Jdenticon\r\n * https://github.com/dmester/jdenticon\r\n * Copyright © Daniel Mester Pirttijärvi\r\n */\r\n\r\n/**\r\n * Parses a substring of the hash as a number.\r\n * @param {number} startPosition \r\n * @param {number=} octets\r\n */\r\nexport function parseHex(hash, startPosition, octets) {\r\n    return parseInt(hash.substr(startPosition, octets), 16);\r\n}\r\n","﻿/**\r\n * Jdenticon\r\n * https://github.com/dmester/jdenticon\r\n * Copyright © Daniel Mester Pirttijärvi\r\n */\r\n\r\nimport { parseHex } from \"../common/parseHex\";\r\n\r\nfunction decToHex(v) {\r\n    v |= 0; // Ensure integer value\r\n    return v < 0 ? \"00\" :\r\n        v < 16 ? \"0\" + v.toString(16) :\r\n        v < 256 ? v.toString(16) :\r\n        \"ff\";\r\n}\r\n\r\nfunction hueToRgb(m1, m2, h) {\r\n    h = h < 0 ? h + 6 : h > 6 ? h - 6 : h;\r\n    return decToHex(255 * (\r\n        h < 1 ? m1 + (m2 - m1) * h :\r\n        h < 3 ? m2 :\r\n        h < 4 ? m1 + (m2 - m1) * (4 - h) :\r\n        m1));\r\n}\r\n\r\n/**\r\n * @param {number} r Red channel [0, 255]\r\n * @param {number} g Green channel [0, 255]\r\n * @param {number} b Blue channel [0, 255]\r\n */\r\nexport function rgb(r, g, b) {\r\n    return \"#\" + decToHex(r) + decToHex(g) + decToHex(b);\r\n}\r\n\r\n/**\r\n * @param {string} color  Color value to parse. Currently hexadecimal strings on the format #rgb[a] and #rrggbb[aa] are supported.\r\n * @returns {string}\r\n */\r\nexport function parseColor(color) {\r\n    if (/^#[0-9a-f]{3,8}$/i.test(color)) {\r\n        let result;\r\n        const colorLength = color.length;\r\n\r\n        if (colorLength < 6) {\r\n            const r = color[1],\r\n                  g = color[2],\r\n                  b = color[3],\r\n                  a = color[4] || \"\";\r\n            result = \"#\" + r + r + g + g + b + b + a + a;\r\n        }\r\n        if (colorLength == 7 || colorLength > 8) {\r\n            result = color;\r\n        }\r\n        \r\n        return result;\r\n    }\r\n}\r\n\r\n/**\r\n * Converts a hexadecimal color to a CSS3 compatible color.\r\n * @param {string} hexColor  Color on the format \"#RRGGBB\" or \"#RRGGBBAA\"\r\n * @returns {string}\r\n */\r\nexport function toCss3Color(hexColor) {\r\n    const a = parseHex(hexColor, 7, 2);\r\n    let result;\r\n\r\n    if (isNaN(a)) {\r\n        result = hexColor;\r\n    } else {\r\n        const r = parseHex(hexColor, 1, 2),\r\n            g = parseHex(hexColor, 3, 2),\r\n            b = parseHex(hexColor, 5, 2);\r\n        result = \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + (a / 255).toFixed(2) + \")\";\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Converts an HSL color to a hexadecimal RGB color.\r\n * @param {number} hue  Hue in range [0, 1]\r\n * @param {number} saturation  Saturation in range [0, 1]\r\n * @param {number} lightness  Lightness in range [0, 1]\r\n * @returns {string}\r\n */\r\nexport function hsl(hue, saturation, lightness) {\r\n    // Based on http://www.w3.org/TR/2011/REC-css3-color-20110607/#hsl-color\r\n    let result;\r\n\r\n    if (saturation == 0) {\r\n        const partialHex = decToHex(lightness * 255);\r\n        result = partialHex + partialHex + partialHex;\r\n    }\r\n    else {\r\n        const m2 = lightness <= 0.5 ? lightness * (saturation + 1) : lightness + saturation - lightness * saturation,\r\n              m1 = lightness * 2 - m2;\r\n        result =\r\n            hueToRgb(m1, m2, hue * 6 + 2) +\r\n            hueToRgb(m1, m2, hue * 6) +\r\n            hueToRgb(m1, m2, hue * 6 - 2);\r\n    }\r\n\r\n    return \"#\" + result;\r\n}\r\n\r\n/**\r\n * Converts an HSL color to a hexadecimal RGB color. This function will correct the lightness for the \"dark\" hues\r\n * @param {number} hue  Hue in range [0, 1]\r\n * @param {number} saturation  Saturation in range [0, 1]\r\n * @param {number} lightness  Lightness in range [0, 1]\r\n * @returns {string}\r\n */\r\nexport function correctedHsl(hue, saturation, lightness) {\r\n    // The corrector specifies the perceived middle lightness for each hue\r\n    const correctors = [ 0.55, 0.5, 0.5, 0.46, 0.6, 0.55, 0.55 ],\r\n          corrector = correctors[(hue * 6 + 0.5) | 0];\r\n    \r\n    // Adjust the input lightness relative to the corrector\r\n    lightness = lightness < 0.5 ? lightness * corrector * 2 : corrector + (lightness - 0.5) * (1 - corrector) * 2;\r\n    \r\n    return hsl(hue, saturation, lightness);\r\n}\r\n","﻿/**\r\n * Jdenticon\r\n * https://github.com/dmester/jdenticon\r\n * Copyright © Daniel Mester Pirttijärvi\r\n */\r\n\r\n// In the future we can replace `GLOBAL` with `globalThis`, but for now use the old school global detection for\r\n// backward compatibility.\r\n\r\nexport const GLOBAL = \r\n    typeof window !== \"undefined\" ? window :\r\n    typeof self !== \"undefined\" ? self :\r\n    typeof global !== \"undefined\" ? global :\r\n    {};\r\n","﻿/**\r\n * Jdenticon\r\n * https://github.com/dmester/jdenticon\r\n * Copyright © Daniel Mester Pirttijärvi\r\n */\r\n\r\nimport { parseColor } from \"../renderer/color\";\r\nimport { GLOBAL } from \"./global\";\r\n\r\n/**\r\n * @typedef {Object} ParsedConfiguration\r\n * @property {number} colorSaturation\r\n * @property {number} grayscaleSaturation\r\n * @property {string} backColor\r\n * @property {number} iconPadding\r\n * @property {function(number):number} hue\r\n * @property {function(number):number} colorLightness\r\n * @property {function(number):number} grayscaleLightness\r\n */\r\n\r\nexport const CONFIG_PROPERTIES = {\r\n    GLOBAL: \"jdenticon_config\",\r\n    MODULE: \"config\",\r\n};\r\n\r\nvar rootConfigurationHolder = {};\r\n\r\n/**\r\n * Defines the deprecated `config` property on the root Jdenticon object. When the property is set a warning is \r\n * printed in the console. To minimize bundle size, this is only used in Node bundles.\r\n * @param {!Object} rootObject \r\n */\r\nexport function defineConfigPropertyWithWarn(rootObject) {\r\n    Object.defineProperty(rootObject, CONFIG_PROPERTIES.MODULE, {\r\n        configurable: true,\r\n        get: () => rootConfigurationHolder[CONFIG_PROPERTIES.MODULE],\r\n        set: newConfiguration => {\r\n            rootConfigurationHolder[CONFIG_PROPERTIES.MODULE] = newConfiguration;\r\n            console.warn(\"jdenticon.config is deprecated. Use jdenticon.configure() instead.\");\r\n        },\r\n    });\r\n}\r\n\r\n/**\r\n * Defines the deprecated `config` property on the root Jdenticon object without printing a warning in the console\r\n * when it is being used.\r\n * @param {!Object} rootObject \r\n */\r\nexport function defineConfigProperty(rootObject) {\r\n    rootConfigurationHolder = rootObject;\r\n}\r\n\r\n/**\r\n * Sets a new icon style configuration. The new configuration is not merged with the previous one. * \r\n * @param {Object} newConfiguration - New configuration object.\r\n */\r\nexport function configure(newConfiguration) {\r\n    if (arguments.length) {\r\n        rootConfigurationHolder[CONFIG_PROPERTIES.MODULE] = newConfiguration;\r\n    }\r\n    return rootConfigurationHolder[CONFIG_PROPERTIES.MODULE];\r\n}\r\n\r\n/**\r\n * Gets the normalized current Jdenticon color configuration. Missing fields have default values.\r\n * @param {Object|number|undefined} paddingOrLocalConfig - Configuration passed to the called API method. A\r\n *    local configuration overrides the global configuration in it entirety. This parameter can for backward\r\n *    compatibility also contain a padding value. A padding value only overrides the global padding, not the\r\n *    entire global configuration.\r\n * @param {number} defaultPadding - Padding used if no padding is specified in neither the configuration nor\r\n *    explicitly to the API method.\r\n * @returns {ParsedConfiguration}\r\n */\r\nexport function getConfiguration(paddingOrLocalConfig, defaultPadding) {\r\n    const configObject = \r\n            typeof paddingOrLocalConfig == \"object\" && paddingOrLocalConfig ||\r\n            rootConfigurationHolder[CONFIG_PROPERTIES.MODULE] ||\r\n            GLOBAL[CONFIG_PROPERTIES.GLOBAL] ||\r\n            { },\r\n\r\n        lightnessConfig = configObject[\"lightness\"] || { },\r\n        \r\n        // In versions < 2.1.0 there was no grayscale saturation -\r\n        // saturation was the color saturation.\r\n        saturation = configObject[\"saturation\"] || { },\r\n        colorSaturation = \"color\" in saturation ? saturation[\"color\"] : saturation,\r\n        grayscaleSaturation = saturation[\"grayscale\"],\r\n\r\n        backColor = configObject[\"backColor\"],\r\n        padding = configObject[\"padding\"];\r\n    \r\n    /**\r\n     * Creates a lightness range.\r\n     */\r\n    function lightness(configName, defaultRange) {\r\n        let range = lightnessConfig[configName];\r\n        \r\n        // Check if the lightness range is an array-like object. This way we ensure the\r\n        // array contain two values at the same time.\r\n        if (!(range && range.length > 1)) {\r\n            range = defaultRange;\r\n        }\r\n\r\n        /**\r\n         * Gets a lightness relative the specified value in the specified lightness range.\r\n         */\r\n        return function (value) {\r\n            value = range[0] + value * (range[1] - range[0]);\r\n            return value < 0 ? 0 : value > 1 ? 1 : value;\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Gets a hue allowed by the configured hue restriction,\r\n     * provided the originally computed hue.\r\n     */\r\n    function hueFunction(originalHue) {\r\n        const hueConfig = configObject[\"hues\"];\r\n        let hue;\r\n        \r\n        // Check if 'hues' is an array-like object. This way we also ensure that\r\n        // the array is not empty, which would mean no hue restriction.\r\n        if (hueConfig && hueConfig.length > 0) {\r\n            // originalHue is in the range [0, 1]\r\n            // Multiply with 0.999 to change the range to [0, 1) and then truncate the index.\r\n            hue = hueConfig[0 | (0.999 * originalHue * hueConfig.length)];\r\n        }\r\n\r\n        return typeof hue == \"number\" ?\r\n            \r\n            // A hue was specified. We need to convert the hue from\r\n            // degrees on any turn - e.g. 746° is a perfectly valid hue -\r\n            // to turns in the range [0, 1).\r\n            ((((hue / 360) % 1) + 1) % 1) :\r\n\r\n            // No hue configured => use original hue\r\n            originalHue;\r\n    }\r\n        \r\n    return {\r\n        hue: hueFunction,\r\n        colorSaturation: typeof colorSaturation == \"number\" ? colorSaturation : 0.5,\r\n        grayscaleSaturation: typeof grayscaleSaturation == \"number\" ? grayscaleSaturation : 0,\r\n        colorLightness: lightness(\"color\", [0.4, 0.8]),\r\n        grayscaleLightness: lightness(\"grayscale\", [0.3, 0.9]),\r\n        backColor: parseColor(backColor),\r\n        iconPadding: \r\n            typeof paddingOrLocalConfig == \"number\" ? paddingOrLocalConfig : \r\n            typeof padding == \"number\" ? padding : \r\n            defaultPadding\r\n    }\r\n}\r\n","﻿/**\r\n * Jdenticon\r\n * https://github.com/dmester/jdenticon\r\n * Copyright © Daniel Mester Pirttijärvi\r\n */\r\n\r\n/**\r\n * Represents a point.\r\n */\r\nexport class Point {\r\n    /**\r\n     * @param {number} x \r\n     * @param {number} y \r\n     */\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\n","﻿/**\r\n * Jdenticon\r\n * https://github.com/dmester/jdenticon\r\n * Copyright © Daniel Mester Pirttijärvi\r\n */\r\n\r\nimport { Point } from \"./point\";\r\n\r\n/**\r\n * Translates and rotates a point before being passed on to the canvas context. This was previously done by the canvas context itself, \r\n * but this caused a rendering issue in Chrome on sizes > 256 where the rotation transformation of inverted paths was not done properly.\r\n */\r\nexport class Transform {\r\n    /**\r\n     * @param {number} x The x-coordinate of the upper left corner of the transformed rectangle.\r\n     * @param {number} y The y-coordinate of the upper left corner of the transformed rectangle.\r\n     * @param {number} size The size of the transformed rectangle.\r\n     * @param {number} rotation Rotation specified as 0 = 0 rad, 1 = 0.5π rad, 2 = π rad, 3 = 1.5π rad\r\n     */\r\n    constructor(x, y, size, rotation) {\r\n        this._x = x;\r\n        this._y = y;\r\n        this._size = size;\r\n        this._rotation = rotation;\r\n    }\r\n\r\n    /**\r\n     * Transforms the specified point based on the translation and rotation specification for this Transform.\r\n     * @param {number} x x-coordinate\r\n     * @param {number} y y-coordinate\r\n     * @param {number=} w The width of the transformed rectangle. If greater than 0, this will ensure the returned point is of the upper left corner of the transformed rectangle.\r\n     * @param {number=} h The height of the transformed rectangle. If greater than 0, this will ensure the returned point is of the upper left corner of the transformed rectangle.\r\n     */\r\n    transformIconPoint(x, y, w, h) {\r\n        const right = this._x + this._size,\r\n              bottom = this._y + this._size,\r\n              rotation = this._rotation;\r\n        return rotation === 1 ? new Point(right - y - (h || 0), this._y + x) :\r\n               rotation === 2 ? new Point(right - x - (w || 0), bottom - y - (h || 0)) :\r\n               rotation === 3 ? new Point(this._x + y, bottom - x - (w || 0)) :\r\n               new Point(this._x + x, this._y + y);\r\n    }\r\n}\r\n\r\nexport const NO_TRANSFORM = new Transform(0, 0, 0, 0);\r\n","﻿/**\r\n * Jdenticon\r\n * https://github.com/dmester/jdenticon\r\n * Copyright © Daniel Mester Pirttijärvi\r\n */\r\n\r\nimport { NO_TRANSFORM } from \"./transform\";\r\n\r\n/**\r\n * @typedef {import(\"./renderer\").Renderer} Renderer\r\n * @typedef {import(\"./transform\").Transform} Transform\r\n */\r\n\r\n/**\r\n * Provides helper functions for rendering common basic shapes.\r\n */\r\nexport class Graphics {\r\n    /**\r\n     * @param {Renderer} renderer \r\n     */\r\n    constructor(renderer) {\r\n        /**\r\n         * @type {Renderer}\r\n         * @private\r\n         */\r\n        this._renderer = renderer;\r\n\r\n        /**\r\n         * @type {Transform}\r\n         */\r\n        this.currentTransform = NO_TRANSFORM;\r\n    }\r\n\r\n    /**\r\n     * Adds a polygon to the underlying renderer.\r\n     * @param {Array<number>} points The points of the polygon clockwise on the format [ x0, y0, x1, y1, ..., xn, yn ]\r\n     * @param {boolean=} invert Specifies if the polygon will be inverted.\r\n     */\r\n    addPolygon(points, invert) {\r\n        const di = invert ? -2 : 2,\r\n              transformedPoints = [];\r\n        \r\n        for (let i = invert ? points.length - 2 : 0; i < points.length && i >= 0; i += di) {\r\n            transformedPoints.push(this.currentTransform.transformIconPoint(points[i], points[i + 1]));\r\n        }\r\n        \r\n        this._renderer.addPolygon(transformedPoints);\r\n    }\r\n    \r\n    /**\r\n     * Adds a polygon to the underlying renderer.\r\n     * Source: http://stackoverflow.com/a/2173084\r\n     * @param {number} x The x-coordinate of the upper left corner of the rectangle holding the entire ellipse.\r\n     * @param {number} y The y-coordinate of the upper left corner of the rectangle holding the entire ellipse.\r\n     * @param {number} size The size of the ellipse.\r\n     * @param {boolean=} invert Specifies if the ellipse will be inverted.\r\n     */\r\n    addCircle(x, y, size, invert) {\r\n        const p = this.currentTransform.transformIconPoint(x, y, size, size);\r\n        this._renderer.addCircle(p, size, invert);\r\n    }\r\n\r\n    /**\r\n     * Adds a rectangle to the underlying renderer.\r\n     * @param {number} x The x-coordinate of the upper left corner of the rectangle.\r\n     * @param {number} y The y-coordinate of the upper left corner of the rectangle.\r\n     * @param {number} w The width of the rectangle.\r\n     * @param {number} h The height of the rectangle.\r\n     * @param {boolean=} invert Specifies if the rectangle will be inverted.\r\n     */\r\n    addRectangle(x, y, w, h, invert) {\r\n        this.addPolygon([\r\n            x, y, \r\n            x + w, y,\r\n            x + w, y + h,\r\n            x, y + h\r\n        ], invert);\r\n    }\r\n\r\n    /**\r\n     * Adds a right triangle to the underlying renderer.\r\n     * @param {number} x The x-coordinate of the upper left corner of the rectangle holding the triangle.\r\n     * @param {number} y The y-coordinate of the upper left corner of the rectangle holding the triangle.\r\n     * @param {number} w The width of the triangle.\r\n     * @param {number} h The height of the triangle.\r\n     * @param {number} r The rotation of the triangle (clockwise). 0 = right corner of the triangle in the lower left corner of the bounding rectangle.\r\n     * @param {boolean=} invert Specifies if the triangle will be inverted.\r\n     */\r\n    addTriangle(x, y, w, h, r, invert) {\r\n        const points = [\r\n            x + w, y, \r\n            x + w, y + h, \r\n            x, y + h,\r\n            x, y\r\n        ];\r\n        points.splice(((r || 0) % 4) * 2, 2);\r\n        this.addPolygon(points, invert);\r\n    }\r\n\r\n    /**\r\n     * Adds a rhombus to the underlying renderer.\r\n     * @param {number} x The x-coordinate of the upper left corner of the rectangle holding the rhombus.\r\n     * @param {number} y The y-coordinate of the upper left corner of the rectangle holding the rhombus.\r\n     * @param {number} w The width of the rhombus.\r\n     * @param {number} h The height of the rhombus.\r\n     * @param {boolean=} invert Specifies if the rhombus will be inverted.\r\n     */\r\n    addRhombus(x, y, w, h, invert) {\r\n        this.addPolygon([\r\n            x + w / 2, y,\r\n            x + w, y + h / 2,\r\n            x + w / 2, y + h,\r\n            x, y + h / 2\r\n        ], invert);\r\n    }\r\n}","\r\nvar Graphics__prototype = Graphics.prototype;","﻿/**\r\n * Jdenticon\r\n * https://github.com/dmester/jdenticon\r\n * Copyright © Daniel Mester Pirttijärvi\r\n */\r\n\r\n/**\r\n * @param {number} index\r\n * @param {Graphics} g\r\n * @param {number} cell\r\n * @param {number} positionIndex\r\n * @typedef {import('./graphics').Graphics} Graphics\r\n */\r\nexport function centerShape(index, g, cell, positionIndex) {\r\n    index = index % 14;\r\n\r\n    let k, m, w, h, inner, outer;\r\n\r\n    !index ? (\r\n        k = cell * 0.42,\r\n        g.addPolygon([\r\n            0, 0,\r\n            cell, 0,\r\n            cell, cell - k * 2,\r\n            cell - k, cell,\r\n            0, cell\r\n        ])) :\r\n\r\n    index == 1 ? (\r\n        w = 0 | (cell * 0.5), \r\n        h = 0 | (cell * 0.8),\r\n\r\n        g.addTriangle(cell - w, 0, w, h, 2)) :\r\n\r\n    index == 2 ? (\r\n        w = 0 | (cell / 3),\r\n        g.addRectangle(w, w, cell - w, cell - w)) :\r\n\r\n    index == 3 ? (\r\n        inner = cell * 0.1,\r\n        // Use fixed outer border widths in small icons to ensure the border is drawn\r\n        outer = \r\n            cell < 6 ? 1 :\r\n            cell < 8 ? 2 :\r\n            (0 | (cell * 0.25)),\r\n        \r\n        inner = \r\n            inner > 1 ? (0 | inner) : // large icon => truncate decimals\r\n            inner > 0.5 ? 1 :         // medium size icon => fixed width\r\n            inner,                    // small icon => anti-aliased border\r\n\r\n        g.addRectangle(outer, outer, cell - inner - outer, cell - inner - outer)) :\r\n\r\n    index == 4 ? (\r\n        m = 0 | (cell * 0.15),\r\n        w = 0 | (cell * 0.5),\r\n        g.addCircle(cell - w - m, cell - w - m, w)) :\r\n\r\n    index == 5 ? (\r\n        inner = cell * 0.1,\r\n        outer = inner * 4,\r\n\r\n        // Align edge to nearest pixel in large icons\r\n        outer > 3 && (outer = 0 | outer),\r\n        \r\n        g.addRectangle(0, 0, cell, cell),\r\n        g.addPolygon([\r\n            outer, outer,\r\n            cell - inner, outer,\r\n            outer + (cell - outer - inner) / 2, cell - inner\r\n        ], true)) :\r\n\r\n    index == 6 ? \r\n        g.addPolygon([\r\n            0, 0,\r\n            cell, 0,\r\n            cell, cell * 0.7,\r\n            cell * 0.4, cell * 0.4,\r\n            cell * 0.7, cell,\r\n            0, cell\r\n        ]) :\r\n\r\n    index == 7 ? \r\n        g.addTriangle(cell / 2, cell / 2, cell / 2, cell / 2, 3) :\r\n\r\n    index == 8 ? (\r\n        g.addRectangle(0, 0, cell, cell / 2),\r\n        g.addRectangle(0, cell / 2, cell / 2, cell / 2),\r\n        g.addTriangle(cell / 2, cell / 2, cell / 2, cell / 2, 1)) :\r\n\r\n    index == 9 ? (\r\n        inner = cell * 0.14,\r\n        // Use fixed outer border widths in small icons to ensure the border is drawn\r\n        outer = \r\n            cell < 4 ? 1 :\r\n            cell < 6 ? 2 :\r\n            (0 | (cell * 0.35)),\r\n\r\n        inner = \r\n            cell < 8 ? inner : // small icon => anti-aliased border\r\n            (0 | inner),       // large icon => truncate decimals\r\n\r\n        g.addRectangle(0, 0, cell, cell),\r\n        g.addRectangle(outer, outer, cell - outer - inner, cell - outer - inner, true)) :\r\n\r\n    index == 10 ? (\r\n        inner = cell * 0.12,\r\n        outer = inner * 3,\r\n\r\n        g.addRectangle(0, 0, cell, cell),\r\n        g.addCircle(outer, outer, cell - inner - outer, true)) :\r\n\r\n    index == 11 ? \r\n        g.addTriangle(cell / 2, cell / 2, cell / 2, cell / 2, 3) :\r\n\r\n    index == 12 ? (\r\n        m = cell * 0.25,\r\n        g.addRectangle(0, 0, cell, cell),\r\n        g.addRhombus(m, m, cell - m, cell - m, true)) :\r\n\r\n    // 13\r\n    (\r\n        !positionIndex && (\r\n            m = cell * 0.4, w = cell * 1.2,\r\n            g.addCircle(m, m, w)\r\n        )\r\n    );\r\n}\r\n\r\n/**\r\n * @param {number} index\r\n * @param {Graphics} g\r\n * @param {number} cell\r\n */\r\nexport function outerShape(index, g, cell) {\r\n    index = index % 4;\r\n\r\n    let m;\r\n\r\n    !index ?\r\n        g.addTriangle(0, 0, cell, cell, 0) :\r\n        \r\n    index == 1 ?\r\n        g.addTriangle(0, cell / 2, cell, cell / 2, 0) :\r\n\r\n    index == 2 ?\r\n        g.addRhombus(0, 0, cell, cell) :\r\n\r\n    // 3\r\n    (\r\n        m = cell / 6,\r\n        g.addCircle(m, m, cell - 2 * m)\r\n    );\r\n}\r\n","﻿/**\r\n * Jdenticon\r\n * https://github.com/dmester/jdenticon\r\n * Copyright © Daniel Mester Pirttijärvi\r\n */\r\n\r\nimport { correctedHsl } from \"./color\";\r\n\r\n/**\r\n * Gets a set of identicon color candidates for a specified hue and config.\r\n * @param {number} hue\r\n * @param {import(\"../common/configuration\").ParsedConfiguration} config\r\n */\r\nexport function colorTheme(hue, config) {\r\n    hue = config.hue(hue);\r\n    return [\r\n        // Dark gray\r\n        correctedHsl(hue, config.grayscaleSaturation, config.grayscaleLightness(0)),\r\n        // Mid color\r\n        correctedHsl(hue, config.colorSaturation, config.colorLightness(0.5)),\r\n        // Light gray\r\n        correctedHsl(hue, config.grayscaleSaturation, config.grayscaleLightness(1)),\r\n        // Light color\r\n        correctedHsl(hue, config.colorSaturation, config.colorLightness(1)),\r\n        // Dark color\r\n        correctedHsl(hue, config.colorSaturation, config.colorLightness(0))\r\n    ];\r\n}\r\n","﻿/**\r\n * Jdenticon\r\n * https://github.com/dmester/jdenticon\r\n * Copyright © Daniel Mester Pirttijärvi\r\n */\r\n\r\nimport { Transform } from \"./transform\";\r\nimport { Graphics } from \"./graphics\";\r\nimport { centerShape, outerShape } from \"./shapes\";\r\nimport { colorTheme } from \"./colorTheme\";\r\nimport { parseHex } from \"../common/parseHex\";\r\nimport { getConfiguration } from \"../common/configuration\";\r\n     \r\n/**\r\n * Draws an identicon to a specified renderer.\r\n * @param {import('./renderer').Renderer} renderer\r\n * @param {string} hash\r\n * @param {Object|number=} config\r\n */\r\nexport function iconGenerator(renderer, hash, config) {\r\n    const parsedConfig = getConfiguration(config, 0.08);\r\n\r\n    // Set background color\r\n    if (parsedConfig.backColor) {\r\n        renderer.setBackground(parsedConfig.backColor);\r\n    }\r\n    \r\n    // Calculate padding and round to nearest integer\r\n    let size = renderer.iconSize;\r\n    const padding = (0.5 + size * parsedConfig.iconPadding) | 0;\r\n    size -= padding * 2;\r\n    \r\n    const graphics = new Graphics(renderer);\r\n    \r\n    // Calculate cell size and ensure it is an integer\r\n    const cell = 0 | (size / 4);\r\n    \r\n    // Since the cell size is integer based, the actual icon will be slightly smaller than specified => center icon\r\n    const x = 0 | (padding + size / 2 - cell * 2);\r\n    const y = 0 | (padding + size / 2 - cell * 2);\r\n\r\n    function renderShape(colorIndex, shapes, index, rotationIndex, positions) {\r\n        const shapeIndex = parseHex(hash, index, 1);\r\n        let r = rotationIndex ? parseHex(hash, rotationIndex, 1) : 0;\r\n        \r\n        renderer.beginShape(availableColors[selectedColorIndexes[colorIndex]]);\r\n        \r\n        for (let i = 0; i < positions.length; i++) {\r\n            graphics.currentTransform = new Transform(x + positions[i][0] * cell, y + positions[i][1] * cell, cell, r++ % 4);\r\n            shapes(shapeIndex, graphics, cell, i);\r\n        }\r\n        \r\n        renderer.endShape();\r\n    }\r\n\r\n    // AVAILABLE COLORS\r\n    const hue = parseHex(hash, -7) / 0xfffffff,\r\n    \r\n          // Available colors for this icon\r\n          availableColors = colorTheme(hue, parsedConfig),\r\n\r\n          // The index of the selected colors\r\n          selectedColorIndexes = [];\r\n\r\n    let index;\r\n\r\n    function isDuplicate(values) {\r\n        if (values.indexOf(index) >= 0) {\r\n            for (let i = 0; i < values.length; i++) {\r\n                if (selectedColorIndexes.indexOf(values[i]) >= 0) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < 3; i++) {\r\n        index = parseHex(hash, 8 + i, 1) % availableColors.length;\r\n        if (isDuplicate([0, 4]) || // Disallow dark gray and dark color combo\r\n            isDuplicate([2, 3])) { // Disallow light gray and light color combo\r\n            index = 1;\r\n        }\r\n        selectedColorIndexes.push(index);\r\n    }\r\n\r\n    // ACTUAL RENDERING\r\n    // Sides\r\n    renderShape(0, outerShape, 2, 3, [[1, 0], [2, 0], [2, 3], [1, 3], [0, 1], [3, 1], [3, 2], [0, 2]]);\r\n    // Corners\r\n    renderShape(1, outerShape, 4, 5, [[0, 0], [3, 0], [3, 3], [0, 3]]);\r\n    // Center\r\n    renderShape(2, centerShape, 1, null, [[1, 1], [2, 1], [2, 2], [1, 2]]);\r\n    \r\n    renderer.finish();\r\n}\r\n","﻿/**\r\n * Jdenticon\r\n * https://github.com/dmester/jdenticon\r\n * Copyright © Daniel Mester Pirttijärvi\r\n */\r\n\r\n/**\r\n * Computes a SHA1 hash for any value and returns it as a hexadecimal string.\r\n * \r\n * This function is optimized for minimal code size and rather short messages.\r\n * \r\n * @param {string} message \r\n */\r\nexport function sha1(message) {\r\n    const HASH_SIZE_HALF_BYTES = 40;\r\n    const BLOCK_SIZE_WORDS = 16;\r\n\r\n    // Variables\r\n    // `var` is used to be able to minimize the number of `var` keywords.\r\n    var i = 0,\r\n        f = 0,\r\n    \r\n        // Use `encodeURI` to UTF8 encode the message without any additional libraries\r\n        // We could use `unescape` + `encodeURI` to minimize the code, but that would be slightly risky\r\n        // since `unescape` is deprecated.\r\n        urlEncodedMessage = encodeURI(message) + \"%80\", // trailing '1' bit padding\r\n        \r\n        // This can be changed to a preallocated Uint32Array array for greater performance and larger code size\r\n        data = [],\r\n        dataSize,\r\n        \r\n        hashBuffer = [],\r\n\r\n        a = 0x67452301,\r\n        b = 0xefcdab89,\r\n        c = ~a,\r\n        d = ~b,\r\n        e = 0xc3d2e1f0,\r\n        hash = [a, b, c, d, e],\r\n\r\n        blockStartIndex = 0,\r\n        hexHash = \"\";\r\n\r\n    /**\r\n     * Rotates the value a specified number of bits to the left.\r\n     * @param {number} value  Value to rotate\r\n     * @param {number} shift  Bit count to shift.\r\n     */\r\n    function rotl(value, shift) {\r\n        return (value << shift) | (value >>> (32 - shift));\r\n    }\r\n\r\n    // Message data\r\n    for ( ; i < urlEncodedMessage.length; f++) {\r\n        data[f >> 2] = data[f >> 2] |\r\n            (\r\n                (\r\n                    urlEncodedMessage[i] == \"%\"\r\n                        // Percent encoded byte\r\n                        ? parseInt(urlEncodedMessage.substring(i + 1, i += 3), 16)\r\n                        // Unencoded byte\r\n                        : urlEncodedMessage.charCodeAt(i++)\r\n                )\r\n\r\n                // Read bytes in reverse order (big endian words)\r\n                << ((3 - (f & 3)) * 8)\r\n            );\r\n    }\r\n\r\n    // f is now the length of the utf8 encoded message\r\n    // 7 = 8 bytes (64 bit) for message size, -1 to round down\r\n    // >> 6 = integer division with block size\r\n    dataSize = (((f + 7) >> 6) + 1) * BLOCK_SIZE_WORDS;\r\n\r\n    // Message size in bits.\r\n    // SHA1 uses a 64 bit integer to represent the size, but since we only support short messages only the least\r\n    // significant 32 bits are set. -8 is for the '1' bit padding byte.\r\n    data[dataSize - 1] = f * 8 - 8;\r\n    \r\n    // Compute hash\r\n    for ( ; blockStartIndex < dataSize; blockStartIndex += BLOCK_SIZE_WORDS) {\r\n        for (i = 0; i < 80; i++) {\r\n            f = rotl(a, 5) + e + (\r\n                    // Ch\r\n                    i < 20 ? ((b & c) ^ ((~b) & d)) + 0x5a827999 :\r\n                    \r\n                    // Parity\r\n                    i < 40 ? (b ^ c ^ d) + 0x6ed9eba1 :\r\n                    \r\n                    // Maj\r\n                    i < 60 ? ((b & c) ^ (b & d) ^ (c & d)) + 0x8f1bbcdc :\r\n                    \r\n                    // Parity\r\n                    (b ^ c ^ d) + 0xca62c1d6\r\n                ) + ( \r\n                    hashBuffer[i] = i < BLOCK_SIZE_WORDS\r\n                        // Bitwise OR is used to coerse `undefined` to 0\r\n                        ? (data[blockStartIndex + i] | 0)\r\n                        : rotl(hashBuffer[i - 3] ^ hashBuffer[i - 8] ^ hashBuffer[i - 14] ^ hashBuffer[i - 16], 1)\r\n                );\r\n\r\n            e = d;\r\n            d = c;\r\n            c = rotl(b, 30);\r\n            b = a;\r\n            a = f;\r\n        }\r\n\r\n        hash[0] = a = ((hash[0] + a) | 0);\r\n        hash[1] = b = ((hash[1] + b) | 0);\r\n        hash[2] = c = ((hash[2] + c) | 0);\r\n        hash[3] = d = ((hash[3] + d) | 0);\r\n        hash[4] = e = ((hash[4] + e) | 0);\r\n    }\r\n\r\n    // Format hex hash\r\n    for (i = 0; i < HASH_SIZE_HALF_BYTES; i++) {\r\n        hexHash += (\r\n            (\r\n                // Get word (2^3 half-bytes per word)\r\n                hash[i >> 3] >>>\r\n\r\n                // Append half-bytes in reverse order\r\n                ((7 - (i & 7)) * 4)\r\n            ) \r\n            // Clamp to half-byte\r\n            & 0xf\r\n        ).toString(16);\r\n    }\r\n\r\n    return hexHash;\r\n}\r\n","﻿/**\r\n * Jdenticon\r\n * https://github.com/dmester/jdenticon\r\n * Copyright © Daniel Mester Pirttijärvi\r\n */\r\n\r\nimport { sha1 } from \"./sha1\";\r\n\r\n/**\r\n * Inputs a value that might be a valid hash string for Jdenticon and returns it \r\n * if it is determined valid, otherwise a falsy value is returned.\r\n */\r\nexport function isValidHash(hashCandidate) {\r\n    return /^[0-9a-f]{11,}$/i.test(hashCandidate) && hashCandidate;\r\n}\r\n\r\n/**\r\n * Computes a hash for the specified value. Currently SHA1 is used. This function\r\n * always returns a valid hash.\r\n */\r\nexport function computeHash(value) {\r\n    return sha1(value == null ? \"\" : \"\" + value);\r\n}\r\n","﻿/**\r\n * Jdenticon\r\n * https://github.com/dmester/jdenticon\r\n * Copyright © Daniel Mester Pirttijärvi\r\n */\r\n\r\nimport { toCss3Color } from \"../color\";\r\n\r\n/**\r\n * @typedef {import(\"../renderer\").Renderer} Renderer\r\n * @typedef {import('../point').Point} Point\r\n */\r\n\r\n/**\r\n * Renderer redirecting drawing commands to a canvas context.\r\n * @implements {Renderer}\r\n */\r\nexport class CanvasRenderer {\r\n    /**\r\n     * @param {number=} iconSize\r\n     */\r\n    constructor(ctx, iconSize) {\r\n        const canvas = ctx.canvas; \r\n        const width = canvas.width;\r\n        const height = canvas.height;\r\n        \r\n        ctx.save();\r\n        \r\n        if (!iconSize) {\r\n            iconSize = Math.min(width, height);\r\n            \r\n            ctx.translate(\r\n                ((width - iconSize) / 2) | 0,\r\n                ((height - iconSize) / 2) | 0);\r\n        }\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        this._ctx = ctx;\r\n        this.iconSize = iconSize;\r\n        \r\n        ctx.clearRect(0, 0, iconSize, iconSize);\r\n    }\r\n\r\n    /**\r\n     * Fills the background with the specified color.\r\n     * @param {string} fillColor  Fill color on the format #rrggbb[aa].\r\n     */\r\n    setBackground(fillColor) {\r\n        const ctx = this._ctx;\r\n        const iconSize = this.iconSize;\r\n\r\n        ctx.fillStyle = toCss3Color(fillColor);\r\n        ctx.fillRect(0, 0, iconSize, iconSize);\r\n    }\r\n\r\n    /**\r\n     * Marks the beginning of a new shape of the specified color. Should be ended with a call to endShape.\r\n     * @param {string} fillColor Fill color on format #rrggbb[aa].\r\n     */\r\n    beginShape(fillColor) {\r\n        const ctx = this._ctx;\r\n        ctx.fillStyle = toCss3Color(fillColor);\r\n        ctx.beginPath();\r\n    }\r\n\r\n    /**\r\n     * Marks the end of the currently drawn shape. This causes the queued paths to be rendered on the canvas.\r\n     */\r\n    endShape() {\r\n        this._ctx.fill();\r\n    }\r\n\r\n    /**\r\n     * Adds a polygon to the rendering queue.\r\n     * @param points An array of Point objects.\r\n     */\r\n    addPolygon(points) {\r\n        const ctx = this._ctx;\r\n        ctx.moveTo(points[0].x, points[0].y);\r\n        for (let i = 1; i < points.length; i++) {\r\n            ctx.lineTo(points[i].x, points[i].y);\r\n        }\r\n        ctx.closePath();\r\n    }\r\n\r\n    /**\r\n     * Adds a circle to the rendering queue.\r\n     * @param {Point} point The upper left corner of the circle bounding box.\r\n     * @param {number} diameter The diameter of the circle.\r\n     * @param {boolean} counterClockwise True if the circle is drawn counter-clockwise (will result in a hole if rendered on a clockwise path).\r\n     */\r\n    addCircle(point, diameter, counterClockwise) {\r\n        const ctx = this._ctx,\r\n              radius = diameter / 2;\r\n        ctx.moveTo(point.x + radius, point.y + radius);\r\n        ctx.arc(point.x + radius, point.y + radius, radius, 0, Math.PI * 2, counterClockwise);\r\n        ctx.closePath();\r\n    }\r\n\r\n    /**\r\n     * Called when the icon has been completely drawn.\r\n     */\r\n    finish() {\r\n        this._ctx.restore();\r\n    }\r\n}\r\n","\r\nvar CanvasRenderer__prototype = CanvasRenderer.prototype;","import { iconGenerator } from \"../renderer/iconGenerator\";\r\nimport { isValidHash, computeHash } from \"../common/hashUtils\";\r\nimport { CanvasRenderer } from \"../renderer/canvas/canvasRenderer\";\r\n\r\n/**\r\n * Draws an identicon to a context.\r\n * @param {CanvasRenderingContext2D} ctx - Canvas context on which the icon will be drawn at location (0, 0).\r\n * @param {*} hashOrValue - A hexadecimal hash string or any value that will be hashed by Jdenticon.\r\n * @param {number} size - Icon size in pixels.\r\n * @param {Object|number=} config - Optional configuration. If specified, this configuration object overrides any\r\n *    global configuration in its entirety. For backward compatibility a padding value in the range [0.0, 0.5) can be\r\n *    specified in place of a configuration object.\r\n */\r\nexport function drawIcon(ctx, hashOrValue, size, config) {\r\n    if (!ctx) {\r\n        throw new Error(\"No canvas specified.\");\r\n    }\r\n    \r\n    iconGenerator(new CanvasRenderer(ctx, size), \r\n        isValidHash(hashOrValue) || computeHash(hashOrValue), \r\n        config);\r\n}\r\n","﻿/**\r\n * Jdenticon\r\n * https://github.com/dmester/jdenticon\r\n * Copyright © Daniel Mester Pirttijärvi\r\n */\r\n\r\n/**\r\n * Prepares a measure to be used as a measure in an SVG path, by\r\n * rounding the measure to a single decimal. This reduces the file\r\n * size of the generated SVG with more than 50% in some cases.\r\n */\r\nfunction svgValue(value) {\r\n    return ((value * 10 + 0.5) | 0) / 10;\r\n}\r\n\r\n/**\r\n * Represents an SVG path element.\r\n */\r\nexport class SvgPath {\r\n    constructor() {\r\n        /**\r\n         * This property holds the data string (path.d) of the SVG path.\r\n         * @type {string}\r\n         */\r\n        this.dataString = \"\";\r\n    }\r\n\r\n    /**\r\n     * Adds a polygon with the current fill color to the SVG path.\r\n     * @param points An array of Point objects.\r\n     */\r\n    addPolygon(points) {\r\n        let dataString = \"\";\r\n        for (let i = 0; i < points.length; i++) {\r\n            dataString += (i ? \"L\" : \"M\") + svgValue(points[i].x) + \" \" + svgValue(points[i].y);\r\n        }\r\n        this.dataString += dataString + \"Z\";\r\n    }\r\n\r\n    /**\r\n     * Adds a circle with the current fill color to the SVG path.\r\n     * @param {import('../point').Point} point The upper left corner of the circle bounding box.\r\n     * @param {number} diameter The diameter of the circle.\r\n     * @param {boolean} counterClockwise True if the circle is drawn counter-clockwise (will result in a hole if rendered on a clockwise path).\r\n     */\r\n    addCircle(point, diameter, counterClockwise) {\r\n        const sweepFlag = counterClockwise ? 0 : 1,\r\n              svgRadius = svgValue(diameter / 2),\r\n              svgDiameter = svgValue(diameter),\r\n              svgArc = \"a\" + svgRadius + \",\" + svgRadius + \" 0 1,\" + sweepFlag + \" \";\r\n            \r\n        this.dataString += \r\n            \"M\" + svgValue(point.x) + \" \" + svgValue(point.y + diameter / 2) +\r\n            svgArc + svgDiameter + \",0\" + \r\n            svgArc + (-svgDiameter) + \",0\";\r\n    }\r\n}\r\n\r\n","\r\nvar SvgPath__prototype = SvgPath.prototype;","﻿/**\r\n * Jdenticon\r\n * https://github.com/dmester/jdenticon\r\n * Copyright © Daniel Mester Pirttijärvi\r\n */\r\n\r\nimport { SvgPath } from \"./svgPath\";\r\nimport { parseHex } from \"../../common/parseHex\";\r\n\r\n/**\r\n * @typedef {import(\"../point\").Point} Point\r\n * @typedef {import(\"../renderer\").Renderer} Renderer\r\n * @typedef {import(\"./svgElement\").SvgElement} SvgElement\r\n * @typedef {import(\"./svgWriter\").SvgWriter} SvgWriter\r\n */\r\n\r\n/**\r\n * Renderer producing SVG output.\r\n * @implements {Renderer}\r\n */\r\nexport class SvgRenderer {\r\n    /**\r\n     * @param {SvgElement|SvgWriter} target \r\n     */\r\n    constructor(target) {\r\n        /**\r\n         * @type {SvgPath}\r\n         * @private\r\n         */\r\n        this._path;\r\n\r\n        /**\r\n         * @type {Object.<string,SvgPath>}\r\n         * @private\r\n         */\r\n        this._pathsByColor = { };\r\n\r\n        /**\r\n         * @type {SvgElement|SvgWriter}\r\n         * @private\r\n         */\r\n        this._target = target;\r\n\r\n        /**\r\n         * @type {number}\r\n         */\r\n        this.iconSize = target.iconSize;\r\n    }\r\n\r\n    /**\r\n     * Fills the background with the specified color.\r\n     * @param {string} fillColor  Fill color on the format #rrggbb[aa].\r\n     */\r\n    setBackground(fillColor) {\r\n        const match = /^(#......)(..)?/.exec(fillColor),\r\n              opacity = match[2] ? parseHex(match[2], 0) / 255 : 1;\r\n        this._target.setBackground(match[1], opacity);\r\n    }\r\n\r\n    /**\r\n     * Marks the beginning of a new shape of the specified color. Should be ended with a call to endShape.\r\n     * @param {string} color Fill color on format #xxxxxx.\r\n     */\r\n    beginShape(color) {\r\n        this._path = this._pathsByColor[color] || (this._pathsByColor[color] = new SvgPath());\r\n    }\r\n\r\n    /**\r\n     * Marks the end of the currently drawn shape.\r\n     */\r\n    endShape() { }\r\n\r\n    /**\r\n     * Adds a polygon with the current fill color to the SVG.\r\n     * @param points An array of Point objects.\r\n     */\r\n    addPolygon(points) {\r\n        this._path.addPolygon(points);\r\n    }\r\n\r\n    /**\r\n     * Adds a circle with the current fill color to the SVG.\r\n     * @param {Point} point The upper left corner of the circle bounding box.\r\n     * @param {number} diameter The diameter of the circle.\r\n     * @param {boolean} counterClockwise True if the circle is drawn counter-clockwise (will result in a hole if rendered on a clockwise path).\r\n     */\r\n    addCircle(point, diameter, counterClockwise) {\r\n        this._path.addCircle(point, diameter, counterClockwise);\r\n    }\r\n\r\n    /**\r\n     * Called when the icon has been completely drawn.\r\n     */\r\n    finish() { \r\n        const pathsByColor = this._pathsByColor;\r\n        for (let color in pathsByColor) {\r\n            // hasOwnProperty cannot be shadowed in pathsByColor\r\n            // eslint-disable-next-line no-prototype-builtins\r\n            if (pathsByColor.hasOwnProperty(color)) {\r\n                this._target.appendPath(color, pathsByColor[color].dataString);\r\n            }\r\n        }\r\n    }\r\n}\r\n","\r\nvar SvgRenderer__prototype = SvgRenderer.prototype;","﻿/**\r\n * Jdenticon\r\n * https://github.com/dmester/jdenticon\r\n * Copyright © Daniel Mester Pirttijärvi\r\n */\r\n\r\nexport const SVG_CONSTANTS = {\r\n    XMLNS: \"http://www.w3.org/2000/svg\",\r\n    WIDTH: \"width\",\r\n    HEIGHT: \"height\",\r\n}","﻿/**\r\n * Jdenticon\r\n * https://github.com/dmester/jdenticon\r\n * Copyright © Daniel Mester Pirttijärvi\r\n */\r\n\r\nimport { SVG_CONSTANTS } from \"./constants\";\r\n\r\n/**\r\n * Renderer producing SVG output.\r\n */\r\nexport class SvgWriter {\r\n    /**\r\n     * @param {number} iconSize - Icon width and height in pixels.\r\n     */\r\n    constructor(iconSize) {\r\n        /**\r\n         * @type {number}\r\n         */\r\n        this.iconSize = iconSize;\r\n\r\n        /**\r\n         * @type {string}\r\n         * @private\r\n         */\r\n        this._s =\r\n            '<svg xmlns=\"' + SVG_CONSTANTS.XMLNS + '\" width=\"' + \r\n            iconSize + '\" height=\"' + iconSize + '\" viewBox=\"0 0 ' + \r\n            iconSize + ' ' + iconSize + '\">';\r\n    }\r\n\r\n    /**\r\n     * Fills the background with the specified color.\r\n     * @param {string} fillColor  Fill color on the format #rrggbb.\r\n     * @param {number} opacity  Opacity in the range [0.0, 1.0].\r\n     */\r\n    setBackground(fillColor, opacity) {\r\n        if (opacity) {\r\n            this._s += '<rect width=\"100%\" height=\"100%\" fill=\"' + \r\n                fillColor + '\" opacity=\"' + opacity.toFixed(2) + '\"/>';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Writes a path to the SVG string.\r\n     * @param {string} color Fill color on format #rrggbb.\r\n     * @param {string} dataString The SVG path data string.\r\n     */\r\n    appendPath(color, dataString) {\r\n        this._s += '<path fill=\"' + color + '\" d=\"' + dataString + '\"/>';\r\n    }\r\n\r\n    /**\r\n     * Gets the rendered image as an SVG string.\r\n     */\r\n    toString() {\r\n        return this._s + \"</svg>\";\r\n    }\r\n}\r\n","\r\nvar SvgWriter__prototype = SvgWriter.prototype;","import { iconGenerator } from \"../renderer/iconGenerator\";\r\nimport { isValidHash, computeHash } from \"../common/hashUtils\";\r\nimport { SvgRenderer } from \"../renderer/svg/svgRenderer\";\r\nimport { SvgWriter } from \"../renderer/svg/svgWriter\";\r\n\r\n/**\r\n * Draws an identicon as an SVG string.\r\n * @param {*} hashOrValue - A hexadecimal hash string or any value that will be hashed by Jdenticon.\r\n * @param {number} size - Icon size in pixels.\r\n * @param {Object|number=} config - Optional configuration. If specified, this configuration object overrides any\r\n *    global configuration in its entirety. For backward compatibility a padding value in the range [0.0, 0.5) can be\r\n *    specified in place of a configuration object.\r\n * @returns {string} SVG string\r\n */\r\nexport function toSvg(hashOrValue, size, config) {\r\n    const writer = new SvgWriter(size);\r\n    iconGenerator(new SvgRenderer(writer), \r\n        isValidHash(hashOrValue) || computeHash(hashOrValue),\r\n        config);\r\n    return writer.toString();\r\n}\r\n","﻿/**\r\n * Jdenticon\r\n * https://github.com/dmester/jdenticon\r\n * Copyright © Daniel Mester Pirttijärvi\r\n */\r\n\r\nexport const ICON_TYPE_SVG = 1;\r\n\r\nexport const ICON_TYPE_CANVAS = 2;\r\n\r\nexport const ATTRIBUTES = {\r\n    HASH: \"data-jdenticon-hash\",\r\n    VALUE: \"data-jdenticon-value\"\r\n};\r\n\r\nexport const ICON_SELECTOR = \"[\" + ATTRIBUTES.HASH +\"],[\" + ATTRIBUTES.VALUE +\"]\";\r\n\r\nexport const documentQuerySelectorAll = /** @type {!Function} */ (\r\n    typeof document !== \"undefined\" && document.querySelectorAll.bind(document));\r\n\r\nexport function getIdenticonType(el) {\r\n    if (el) {\r\n        const tagName = el[\"tagName\"];\r\n\r\n        if (/^svg$/i.test(tagName)) {\r\n            return ICON_TYPE_SVG;\r\n        }\r\n\r\n        if (/^canvas$/i.test(tagName) && \"getContext\" in el) {\r\n            return ICON_TYPE_CANVAS;\r\n        }\r\n    }\r\n}\r\n","﻿/**\r\n * Jdenticon\r\n * https://github.com/dmester/jdenticon\r\n * Copyright © Daniel Mester Pirttijärvi\r\n */\r\n\r\nimport { SVG_CONSTANTS } from \"./constants\";\r\n\r\n/**\r\n * Creates a new element and adds it to the specified parent.\r\n * @param {Element} parentNode\r\n * @param {string} name\r\n * @param {...(string|number)} keyValuePairs\r\n */\r\nfunction SvgElement_append(parentNode, name, ...keyValuePairs) {\r\n    const el = document.createElementNS(SVG_CONSTANTS.XMLNS, name);\r\n    \r\n    for (let i = 0; i + 1 < keyValuePairs.length; i += 2) {\r\n        el.setAttribute(\r\n            /** @type {string} */(keyValuePairs[i]),\r\n            /** @type {string} */(keyValuePairs[i + 1]),\r\n            );\r\n    }\r\n\r\n    parentNode.appendChild(el);\r\n}\r\n\r\n\r\n/**\r\n * Renderer producing SVG output.\r\n */\r\nexport class SvgElement {\r\n    /**\r\n     * @param {Element} element - Target element\r\n     */\r\n    constructor(element) {\r\n        // Don't use the clientWidth and clientHeight properties on SVG elements\r\n        // since Firefox won't serve a proper value of these properties on SVG\r\n        // elements (https://bugzilla.mozilla.org/show_bug.cgi?id=874811)\r\n        // Instead use 100px as a hardcoded size (the svg viewBox will rescale \r\n        // the icon to the correct dimensions)\r\n        const iconSize = this.iconSize = Math.min(\r\n            (Number(element.getAttribute(SVG_CONSTANTS.WIDTH)) || 100),\r\n            (Number(element.getAttribute(SVG_CONSTANTS.HEIGHT)) || 100)\r\n            );\r\n        \r\n        /**\r\n         * @type {Element}\r\n         * @private\r\n         */\r\n        this._el = element;\r\n        \r\n        // Clear current SVG child elements\r\n        while (element.firstChild) {\r\n            element.removeChild(element.firstChild);\r\n        }\r\n        \r\n        // Set viewBox attribute to ensure the svg scales nicely.\r\n        element.setAttribute(\"viewBox\", \"0 0 \" + iconSize + \" \" + iconSize);\r\n        element.setAttribute(\"preserveAspectRatio\", \"xMidYMid meet\");\r\n    }\r\n\r\n    /**\r\n     * Fills the background with the specified color.\r\n     * @param {string} fillColor  Fill color on the format #rrggbb.\r\n     * @param {number} opacity  Opacity in the range [0.0, 1.0].\r\n     */\r\n    setBackground(fillColor, opacity) {\r\n        if (opacity) {\r\n            SvgElement_append(this._el, \"rect\",\r\n                SVG_CONSTANTS.WIDTH, \"100%\",\r\n                SVG_CONSTANTS.HEIGHT, \"100%\",\r\n                \"fill\", fillColor,\r\n                \"opacity\", opacity);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Appends a path to the SVG element.\r\n     * @param {string} color Fill color on format #xxxxxx.\r\n     * @param {string} dataString The SVG path data string.\r\n     */\r\n    appendPath(color, dataString) {\r\n        SvgElement_append(this._el, \"path\",\r\n            \"fill\", color,\r\n            \"d\", dataString);\r\n    }\r\n}\r\n","\r\nvar SvgElement__prototype = SvgElement.prototype;","/**\r\n * Jdenticon\r\n * https://github.com/dmester/jdenticon\r\n * Copyright © Daniel Mester Pirttijärvi\r\n */\r\n\r\nimport { iconGenerator } from \"../renderer/iconGenerator\";\r\nimport { isValidHash, computeHash } from \"../common/hashUtils\";\r\nimport { ATTRIBUTES, ICON_SELECTOR, documentQuerySelectorAll } from \"../common/dom\";\r\nimport { SvgRenderer } from \"../renderer/svg/svgRenderer\";\r\nimport { SvgElement } from \"../renderer/svg/svgElement\";\r\nimport { CanvasRenderer } from \"../renderer/canvas/canvasRenderer\";\r\nimport { ICON_TYPE_CANVAS, ICON_TYPE_SVG, getIdenticonType } from \"../common/dom\";\r\n\r\n\r\n/**\r\n * Updates all canvas elements with the `data-jdenticon-hash` or `data-jdenticon-value` attribute.\r\n */\r\nexport function updateAll() {\r\n    if (documentQuerySelectorAll) {\r\n        update(ICON_SELECTOR);\r\n    }\r\n}\r\n\r\n/**\r\n * Updates the identicon in the specified `<canvas>` or `<svg>` elements.\r\n * @param {(string|Element)} el - Specifies the container in which the icon is rendered as a DOM element of the type\r\n *    `<svg>` or `<canvas>`, or a CSS selector to such an element.\r\n * @param {*=} hashOrValue - Optional hash or value to be rendered. If not specified, the `data-jdenticon-hash` or\r\n *    `data-jdenticon-value` attribute will be evaluated.\r\n * @param {Object|number=} config - Optional configuration. If specified, this configuration object overrides any\r\n *    global configuration in its entirety. For backward compability a padding value in the range [0.0, 0.5) can be\r\n *    specified in place of a configuration object.\r\n */\r\nexport function update(el, hashOrValue, config) {\r\n    renderDomElement(el, hashOrValue, config, function (el, iconType) {\r\n        if (iconType) {\r\n            return iconType == ICON_TYPE_SVG ? \r\n                new SvgRenderer(new SvgElement(el)) : \r\n                new CanvasRenderer(/** @type {HTMLCanvasElement} */(el).getContext(\"2d\"));\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Updates the identicon in the specified `<canvas>` elements.\r\n * @param {(string|Element)} el - Specifies the container in which the icon is rendered as a DOM element of the type\r\n *    `<canvas>`, or a CSS selector to such an element.\r\n * @param {*=} hashOrValue - Optional hash or value to be rendered. If not specified, the `data-jdenticon-hash` or\r\n *    `data-jdenticon-value` attribute will be evaluated.\r\n * @param {Object|number=} config - Optional configuration. If specified, this configuration object overrides any\r\n *    global configuration in its entirety. For backward compability a padding value in the range [0.0, 0.5) can be\r\n *    specified in place of a configuration object.\r\n */\r\nexport function updateCanvas(el, hashOrValue, config) {\r\n    renderDomElement(el, hashOrValue, config, function (el, iconType) {\r\n        if (iconType == ICON_TYPE_CANVAS) {\r\n            return new CanvasRenderer(/** @type {HTMLCanvasElement} */(el).getContext(\"2d\"));\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Updates the identicon in the specified `<svg>` elements.\r\n * @param {(string|Element)} el - Specifies the container in which the icon is rendered as a DOM element of the type\r\n *    `<svg>`, or a CSS selector to such an element.\r\n * @param {*=} hashOrValue - Optional hash or value to be rendered. If not specified, the `data-jdenticon-hash` or\r\n *    `data-jdenticon-value` attribute will be evaluated.\r\n * @param {Object|number=} config - Optional configuration. If specified, this configuration object overrides any\r\n *    global configuration in its entirety. For backward compability a padding value in the range [0.0, 0.5) can be\r\n *    specified in place of a configuration object.\r\n */\r\nexport function updateSvg(el, hashOrValue, config) {\r\n    renderDomElement(el, hashOrValue, config, function (el, iconType) {\r\n        if (iconType == ICON_TYPE_SVG) {\r\n            return new SvgRenderer(new SvgElement(el));\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Updates the identicon in the specified canvas or svg elements.\r\n * @param {(string|Element)} el - Specifies the container in which the icon is rendered as a DOM element of the type\r\n *    `<svg>` or `<canvas>`, or a CSS selector to such an element.\r\n * @param {*} hashOrValue - Optional hash or value to be rendered. If not specified, the `data-jdenticon-hash` or\r\n *    `data-jdenticon-value` attribute will be evaluated.\r\n * @param {Object|number|undefined} config\r\n * @param {function(Element,number):import(\"../renderer/renderer\").Renderer} rendererFactory - Factory function for creating an icon renderer.\r\n */\r\nfunction renderDomElement(el, hashOrValue, config, rendererFactory) {\r\n    if (typeof el === \"string\") {\r\n        if (documentQuerySelectorAll) {\r\n            const elements = documentQuerySelectorAll(el);\r\n            for (let i = 0; i < elements.length; i++) {\r\n                renderDomElement(elements[i], hashOrValue, config, rendererFactory);\r\n            }\r\n        }\r\n        return;\r\n    }\r\n    \r\n    // Hash selection. The result from getValidHash or computeHash is \r\n    // accepted as a valid hash.\r\n    const hash = \r\n        // 1. Explicit valid hash\r\n        isValidHash(hashOrValue) ||\r\n        \r\n        // 2. Explicit value (`!= null` catches both null and undefined)\r\n        hashOrValue != null && computeHash(hashOrValue) ||\r\n        \r\n        // 3. `data-jdenticon-hash` attribute\r\n        isValidHash(el.getAttribute(ATTRIBUTES.HASH)) ||\r\n        \r\n        // 4. `data-jdenticon-value` attribute. \r\n        // We want to treat an empty attribute as an empty value. \r\n        // Some browsers return empty string even if the attribute \r\n        // is not specified, so use hasAttribute to determine if \r\n        // the attribute is specified.\r\n        el.hasAttribute(ATTRIBUTES.VALUE) && computeHash(el.getAttribute(ATTRIBUTES.VALUE));\r\n    \r\n    if (!hash) {\r\n        // No hash specified. Don't render an icon.\r\n        return;\r\n    }\r\n    \r\n    const renderer = rendererFactory(el, getIdenticonType(el));\r\n    if (renderer) {\r\n        // Draw icon\r\n        iconGenerator(renderer, hash, config);\r\n    }\r\n}\r\n","﻿/**\r\n * Jdenticon\r\n * https://github.com/dmester/jdenticon\r\n * Copyright © Daniel Mester Pirttijärvi\r\n */\r\n\r\n// This file is compiled to dist/jdenticon-module.js\r\n\r\nimport { defineConfigProperty } from \"./common/configuration\";\r\nimport { configure } from \"./apis/configure\";\r\nimport { drawIcon } from \"./apis/drawIcon\";\r\nimport { toSvg } from \"./apis/toSvg\";\r\nimport { update, updateAll, updateCanvas, updateSvg } from \"./apis/update\";\r\n\r\nconst jdenticon = updateAll;\r\n\r\ndefineConfigProperty(jdenticon);\r\n\r\n// Export public API\r\njdenticon[\"configure\"] = configure;\r\njdenticon[\"drawIcon\"] = drawIcon;\r\njdenticon[\"toSvg\"] = toSvg;\r\njdenticon[\"update\"] = update;\r\njdenticon[\"updateCanvas\"] = updateCanvas;\r\njdenticon[\"updateSvg\"] = updateSvg;\r\n\r\n/**\r\n * Specifies the version of the Jdenticon package in use.\r\n * @type {string}\r\n */\r\njdenticon[\"version\"] = \"#version#\";\r\n\r\n/**\r\n * Specifies which bundle of Jdenticon that is used.\r\n * @type {string}\r\n */\r\njdenticon[\"bundle\"] = \"browser-cjs\";\r\n\r\nmodule.exports = jdenticon;","//Random string generator\r\nexport function makeid(length) {\r\n  var text = \"\";\r\n  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n  for (var i = 0; i < length; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n}\r\n\r\n//shortcut caller\r\nexport function GE(el) {\r\n  return document.getElementById(el);\r\n}\r\n\r\n//add param to url\r\nexport function SetSearchParam(param, value) {\r\n    var url = new URL(window.location.href);\r\n    var query_string = url.search;\r\n    var search_params = new URLSearchParams(query_string); \r\n    \r\n    var old_value = search_params.get(param);\r\n    \r\n    if (old_value != value) {\r\n        if (value != null)\r\n            search_params.set(param, value);\r\n        else\r\n            search_params.delete(param)\r\n    \r\n        url.search = search_params.toString();\r\n        window.history.pushState(\"\", document.title, url);\r\n    }\r\n}\r\n\r\n//get param from url\r\nexport function GetSearchParam(param) {\r\n    var url = new URL(window.location.href);\r\n    var query_string = url.search;\r\n    var search_params = new URLSearchParams(query_string); \r\n    \r\n    return search_params.get(param);\r\n}","import { toSvg } from \"jdenticon\"\r\nimport { makeid, GE, GetSearchParam, SetSearchParam } from \"./utils.js\"\r\n\r\nvar cell_colors = ['is_black', 'is_blue', 'is_red', 'is_green', 'is_yellow', 'is_grey', 'is_magenta', 'is_orange', 'is_aqua', 'is_maroon']\r\nvar cached_levels_data\r\nvar cached_level_path\r\n\r\nGE('animation').innerHTML = `\r\n<img id=\"anim_false_0\" class=\"animation_image is_hidden\" src=\"images/false/weary_face.gif\"/>\r\n<img id=\"anim_false_1\" class=\"animation_image is_hidden\" src=\"images/false/frowning_face.gif\"/>\r\n<img id=\"anim_false_2\" class=\"animation_image is_hidden\" src=\"images/false/unamused_face.gif\"/>\r\n<img id=\"anim_false_3\" class=\"animation_image is_hidden\" src=\"images/false/crying_face.gif\"/>\r\n<img id=\"anim_false_4\" class=\"animation_image is_hidden\" src=\"images/false/pleading_face.gif\"/>\r\n<img id=\"anim_false_5\" class=\"animation_image is_hidden\" src=\"images/false/thinking_face.gif\"/>\r\n\r\n<img id=\"anim_true_0\" class=\"animation_image is_hidden\" src=\"images/true/winking_face.gif\"/>\r\n<img id=\"anim_true_1\" class=\"animation_image is_hidden\" src=\"images/true/beaming_face_with_smiling_eyes.gif\"/>\r\n<img id=\"anim_true_2\" class=\"animation_image is_hidden\" src=\"images/true/grinning_face_with_smiling_eyes.gif\"/>\r\n<img id=\"anim_true_3\" class=\"animation_image is_hidden\" src=\"images/true/hugging_face.gif\"/>\r\n<img id=\"anim_true_4\" class=\"animation_image is_hidden\" src=\"images/true/partying_face.gif\"/>\r\n<img id=\"anim_true_5\" class=\"animation_image is_hidden\" src=\"images/true/relieved_face.gif\"/>\r\n<img id=\"anim_true_6\" class=\"animation_image is_hidden\" src=\"images/true/smiling_face.gif\"/>\r\n<img id=\"anim_true_7\" class=\"animation_image is_hidden\" src=\"images/true/smiling_face_with_sunglasses.gif\"/>\r\n<img id=\"anim_true_8\" class=\"animation_image is_hidden\" src=\"images/true/star_struck.gif\"/>\r\n<img id=\"anim_true_9\" class=\"animation_image is_hidden\" src=\"images/true/upside_down_face.gif\"/>  \r\n`;\r\n\r\nwindow['build_levels'] = (levels_data) => {\r\n  if (!levels_data) levels_data = cached_levels_data\r\n  else cached_levels_data = levels_data  \r\n  console.log(levels_data);\r\n  \r\n  var template = `\r\n    <img src=\"images/logo.png\" id=\"logo-image\"/>\r\n    <div id=\"levels_data\">`\r\n\r\n  for (var levels_backet in levels_data) {\r\n    template += \r\n      `<h2>${levels_backet}</h2>\r\n      <div class=\"levels-block\">`\r\n\r\n      for (var level_ind in levels_data[levels_backet]) {\r\n        var level = levels_data[levels_backet][level_ind]\r\n        var svg = toSvg(level_ind, 100)\r\n        template += \r\n        `<a href=\"?task=${encodeURIComponent(level)}\">\r\n          <div class=\"level-card\">\r\n            <div id=\"${level}\" class=\"task-icon ${localStorage.getItem(`tasks/${level}`)?'solved':''}\">${svg}</div> \r\n            ${level_ind}\r\n          </div>\r\n        </a>`\r\n      } //solved\r\n    template += `</div>`\r\n  }\r\n  template += `</div>`\r\n  GE(\"main_container\").innerHTML = template\r\n\r\n  window.scrollTo(0, 0)\r\n  \r\n}\r\n\r\nwindow['load_level'] = (level_path) =>{\r\n  cached_level_path = level_path\r\n\r\n  GE('main_container').innerHTML = 'Загрузка...';\r\n  console.log(level_path)\r\n  let level_name = level_path.replace(/^.*[\\\\\\/]/, '').split('.').slice(0, -1).join('.')\r\n  fetch(level_path)\r\n  .then(response => response.json())\r\n  .then(json => build_level(json, level_name));\r\n}\r\n\r\n\r\nif (GetSearchParam('task')) {\r\n  var task = decodeURIComponent(GetSearchParam('task'))\r\n  load_level('tasks/' + task)\r\n} else {\r\n  fetch(\"tasks/levels.json\")\r\n    .then(response => response.json())\r\n    .then(json => build_levels(json));\r\n}\r\n\r\n\r\nvar block_data_cache = {};\r\n\r\nfunction create_block(params){\r\n  var block_name = params.block_name ?? \"\";\r\n  var block_data = params.block_data;\r\n  var is_clickable = params.is_clickable ?? false;\r\n  var is_dragable = params.is_dragable ?? false;\r\n  var is_big = params.is_big ?? false;\r\n  var block_size = params.block_size ?? 260;\r\n\r\n  var template = ''\r\n  var action = \"\";\r\n  if (is_dragable) action = `onclick=\"copy_block_from_to('${block_name}', 'test_result')\" `\r\n  template += `<div class=\"is_inline ${is_dragable?'is_dragable':''}\" ${action} style=\"width: ${block_size}px; height: ${block_size}px;\">`\r\n\r\n  template += `<div class=\"block ${is_big?'is_big':''}\" style=\"grid-template-columns: repeat(${block_data[0].length}, 1fr); aspect-ratio: ${block_data[0].length} / ${block_data.length};\">`\r\n  var mz = block_data.length > block_data[0].length ? block_data.length : block_data[0].length\r\n  var rid = 0\r\n  block_data.forEach(element => {\r\n    var cid = 0\r\n    element.forEach(color_ind => {\r\n      \r\n      var cell_ind = `${block_name}_${rid}_${cid}`;\r\n      var action = \"\";\r\n      if (is_clickable)\r\n        action = `\r\n          onmousedown=\"start_interact_with_cell('${cell_ind}')\" \r\n          onmouseover=\"hover_over_cell('${cell_ind}')\" \r\n          onmouseup=\"end_interact_with_cell('${cell_ind}', ${rid}, ${cid})\" `\r\n      \r\n      template += `<div id=\"${cell_ind}\" class=\"cell ${cell_colors[color_ind]} ${is_clickable?'is_clickable':''}\" ${action} style=\"width: calc(${block_size}px / ${mz} - 2px);\"></div>`\r\n      cid += 1\r\n    })\r\n    rid += 1\r\n  })\r\n  template += `</div>`\r\n\r\n  template += `</div>`\r\n\r\n  return template\r\n}\r\n\r\nwindow['copy_block_from_to'] = (input_name, output_name) => {\r\n  var input_data = block_data_cache[input_name]\r\n  var output_data = block_data_cache[output_name]\r\n\r\n  \r\n  var rid = 0\r\n  output_data.forEach(element => {\r\n    var cid = 0\r\n    element.forEach(color_ind => {\r\n      var in_cell_id = `${input_name}_${rid}_${cid}`;\r\n      if (GE(in_cell_id)){\r\n        var in_cell_color = Array.from(GE(in_cell_id).classList).filter(cell_class => cell_colors.includes(cell_class))[0]\r\n\r\n        var out_cell_id = `${output_name}_${rid}_${cid}`;\r\n        var out_cell_color = Array.from(GE(out_cell_id).classList).filter(cell_class => cell_colors.includes(cell_class))[0]\r\n\r\n        console.log(in_cell_id, in_cell_color, out_cell_color)\r\n        GE(out_cell_id).classList.remove(out_cell_color)\r\n        GE(out_cell_id).classList.add(in_cell_color)\r\n      }\r\n      cid += 1\r\n    })\r\n    rid += 1\r\n  })\r\n}\r\n\r\nwindow['set_main_color'] = (color) => {\r\n  last_interacted_cell = null\r\n  params.last_color_index = color\r\n}\r\n\r\nwindow['build_level'] = (level_json, level_name) =>{\r\n  console.log(level_json)\r\n\r\n  var template = `<h2>${level_name}</h2>`\r\n\r\n  template += `<div class=\"noselect\">`\r\n  template += `<div id=\"train_container\">`\r\n  level_json.train.forEach(element => {\r\n    template += `<div class=\"train_example\">`\r\n    template += create_block({block_data: element.input})\r\n    template += ` <img src='images/arrow.png' class=\"arrow_img\"/> `\r\n    template += create_block({block_data: element.output})\r\n    template += `</div>`\r\n  });\r\n  template += `</div>`\r\n  template += `<br><br>`\r\n\r\n  template += `<div id=\"test_container\">`\r\n  level_json.test.forEach(element => {\r\n    var empty_block = Array.from(Array(element.output.length), () => Array.from(Array(element.output[0].length), () => 0))\r\n    console.log({output: empty_block})\r\n\r\n    template += `<div style=\"margin: 0px 30px 80px 30px;\">`\r\n    template += create_block({block_data: element.input, is_dragable: true, is_big: true, block_name: \"test_input\", block_size: 340})\r\n    template += ` <img src='images/arrow.png' class=\"arrow_img\"/> `\r\n    template += create_block({block_data: empty_block, is_clickable: true, is_big: true, block_name: \"test_result\", block_size: 340})\r\n    template += `</div>`\r\n\r\n    \r\n    block_data_cache[\"test_input\"] = element.input;\r\n    block_data_cache[\"test_output\"] = element.output;\r\n    block_data_cache[\"test_result\"] = empty_block;\r\n  });\r\n  template += `</div>`\r\n\r\n  template += `\r\n    <button class=\"big_button is_green\" onclick=\"check_result()\">Check</button>\r\n    <br>\r\n    <a href=\"?\"><button class=\"big_button is_blue\">Back</button></a>\r\n    <div style=\"height: 140px\"><div>\r\n  `;\r\n\r\n  template += `</div>`\r\n\r\n  \r\n  template += `\r\n  <div id=\"pallete\">\r\n    <div id=\"main_color\" class=\"pallete_cell main ${cell_colors[0]} is_inline\"></div>`\r\n\r\n  cell_colors.forEach(color => {\r\n    template += `<div class=\"pallete_cell ${color} is_inline is_clickable\" onclick=\"set_main_color(${cell_colors.indexOf(color)})\" onmousedown=\"fill_color = '${color}'\"></div>`\r\n  });\r\n\r\n  template += `</div>`;\r\n\r\n  GE('main_container').innerHTML = template;\r\n\r\n  var observer = new IntersectionObserver(function(entries) {\r\n    if(entries[0].isIntersecting === true)\r\n      //console.log('Element is fully visible in screen');\r\n      GE('pallete').classList.add('show')\r\n    else\r\n      GE('pallete').classList.remove('show')\r\n  }, { threshold: [0.2] });\r\n  \r\n  observer.observe(GE(\"test_container\"));\r\n}\r\n\r\nvar last_interacted_cell;\r\n//var last_color_index;\r\nvar hover_color_index;\r\nvar start_cell_ind;\r\nwindow['fill_color'] = null;\r\n\r\nvar params = {\r\n  last_color_index_: 0,\r\n  set last_color_index(value){\r\n    this.last_color_index_ = value\r\n    \r\n    var main_color = Array.from(GE(\"main_color\").classList).filter(cell_class => cell_colors.includes(cell_class))[0]\r\n    GE(\"main_color\").classList.remove(main_color) \r\n    GE(\"main_color\").classList.add(cell_colors[this.last_color_index_]) \r\n  },\r\n  get last_color_index(){ \r\n    return this.last_color_index_\r\n  },\r\n}\r\n\r\nwindow['params'] = params\r\n\r\nwindow.addEventListener('mouseup', ()=>{\r\n  //if (hover_color_index != null) \r\n  //  params.last_color_index = hover_color_index\r\n  hover_color_index = null\r\n  fill_color = null\r\n});\r\n\r\nvar initial_cell_color = null\r\nwindow['start_interact_with_cell'] = (cell_ind) => {\r\n  var cell_color = Array.from(GE(cell_ind).classList).filter(cell_class => cell_colors.includes(cell_class))[0]\r\n  var color_index = cell_colors.indexOf(cell_color)\r\n\r\n  initial_cell_color = cell_color\r\n  hover_color_index = params.last_color_index\r\n  start_cell_ind = cell_ind\r\n\r\n  GE(cell_ind).classList.remove(cell_color)\r\n  GE(cell_ind).classList.add(cell_colors[hover_color_index])\r\n  //params.last_color_index = hover_color_index\r\n}\r\n\r\nwindow['hover_over_cell'] = (cell_ind) => {\r\n  var cell_color = Array.from(GE(cell_ind).classList).filter(cell_class => cell_colors.includes(cell_class))[0]\r\n  var color_index = cell_colors.indexOf(cell_color)\r\n  if (hover_color_index != null) {\r\n    GE(cell_ind).classList.remove(cell_color)\r\n    GE(cell_ind).classList.add(cell_colors[hover_color_index])\r\n    //params.last_color_index = hover_color_index\r\n  }\r\n}\r\n\r\nwindow['end_interact_with_cell'] = (cell_ind, x, y) => {\r\n  if (fill_color != null) {\r\n    flood_fill(x, y, fill_color)\r\n    fill_color = null\r\n  } else {\r\n    var cell_color = Array.from(GE(cell_ind).classList).filter(cell_class => cell_colors.includes(cell_class))[0]\r\n    var color_index = cell_colors.indexOf(cell_color)\r\n\r\n    if (start_cell_ind == cell_ind && cell_color == initial_cell_color){\r\n      params.last_color_index = (color_index + 1) % cell_colors.length\r\n      GE(cell_ind).classList.remove(cell_color)\r\n      GE(cell_ind).classList.add(cell_colors[params.last_color_index])\r\n    }\r\n  }\r\n  /*\r\n  if (start_cell_ind == cell_ind){\r\n    //console.log(last_interacted_cell == null, cell_ind == last_interacted_cell, cell_color == cell_colors[params.last_color_index])\r\n    if (cell_ind == last_interacted_cell || cell_color == cell_colors[params.last_color_index]) { //last_interacted_cell == null || \r\n        params.last_color_index = (color_index + 1) % cell_colors.length\r\n        GE(cell_ind).classList.remove(cell_color)\r\n        GE(cell_ind).classList.add(cell_colors[params.last_color_index])\r\n    } else {\r\n      GE(cell_ind).classList.remove(cell_color)\r\n      GE(cell_ind).classList.add(cell_colors[params.last_color_index])\r\n      //params.last_color_index = color_index\r\n    }\r\n  }*/\r\n  last_interacted_cell = cell_ind\r\n}\r\n\r\nwindow['check_result'] = () => {\r\n  var el = GE('animation');\r\n  el.style.animation = 'none';\r\n  el.offsetHeight; \r\n  el.style.animation = null; \r\n\r\n  GE('animation').classList.remove('live')\r\n  GE('animation').classList.add('live')\r\n\r\n  var check = true;\r\n\r\n  var test_output = block_data_cache['test_output']\r\n\r\n  var rid = 0\r\n  test_output.forEach(element => {\r\n    var cid = 0\r\n    element.forEach(color_ind => {\r\n      var res_cell_id = `test_result_${rid}_${cid}`;\r\n      var res_cell_color = Array.from(GE(res_cell_id).classList).filter(cell_class => cell_colors.includes(cell_class))[0]\r\n      var res_color_ind = cell_colors.indexOf(res_cell_color)\r\n\r\n      if (color_ind != res_color_ind) check = false;\r\n      \r\n      cid += 1\r\n    })\r\n    rid += 1\r\n  })\r\n\r\n  for (var ind = 0; ind<10; ind++) {\r\n    GE(`anim_true_${ind}`).classList.add('is_hidden')\r\n  }\r\n\r\n  for (var ind = 0; ind<6; ind++) {\r\n    GE(`anim_false_${ind}`).classList.add('is_hidden')\r\n  }\r\n\r\n  if (check){\r\n    var ind = Math.floor(Math.random() * 10);\r\n    GE(`anim_true_${ind}`).classList.remove('is_hidden')\r\n\r\n    //save that level is solved\r\n    //...\r\n    localStorage.setItem(cached_level_path, true);\r\n\r\n    setTimeout(()=>{window.location = \"?\"}, 2600)\r\n  } else {\r\n    var ind = Math.floor(Math.random() * 6);\r\n    GE(`anim_false_${ind}`).classList.remove('is_hidden')\r\n  }\r\n}\r\n\r\nfunction timeout(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nwindow['flood_fill'] = (x, y, fill_color, start_color = null) =>{\r\n  let cell_id = `test_result_${x}_${y}`;\r\n  if (GE(cell_id) && start_color != fill_color) {\r\n    let cell_color = Array.from(GE(cell_id).classList).filter(cell_class => cell_colors.includes(cell_class))[0]\r\n    if (!start_color) start_color = cell_color\r\n    //var color_ind = cell_colors.indexOf(res_cell_color)\r\n\r\n    if (cell_color == start_color) {\r\n      GE(cell_id).classList.remove(cell_color)\r\n      GE(cell_id).classList.add(fill_color)\r\n\r\n      setTimeout(()=>{\r\n        flood_fill(x + 1, y, fill_color, start_color)\r\n        flood_fill(x - 1, y, fill_color, start_color)\r\n        flood_fill(x, y + 1, fill_color, start_color)\r\n        flood_fill(x, y - 1, fill_color, start_color)\r\n      }, 10)\r\n    }\r\n  }\r\n}","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}